@model WebApplication1.Models.HomeBurndownViewModel
@{
    ViewBag.Title = "Sunny's Burndown";
}
<style type="text/css" media="screen">
</style>

<div class="row" style="margin-top: 10px">
    @using (var form = Html.BeginForm("SaveChanges", "Home", new {@class="MyFormClass"}))
    {
        <div class="col-md-9">
            <div class="well well-sm">
                @Html.TextBoxFor(m=>m.Title, new { style="width:100%"})
            </div>
            <div id="editor" style="height: 80vh">@Model.Definition</div>
        </div>
        <div class="col-md-3">
            <div class="row">
                <div class="well well-sm">
                    @if (Model.CanUserEditBurndownAccess)
                    {
                        <span>Anyone can view: </span>
                        @Html.CheckBox(nameof(Model.IsPublicViewable),Model.IsPublicViewable ?? false)
                        <br/>
                        <span>Anyone can edit: </span>
                        @Html.CheckBox(nameof(Model.IsPublicEditable),Model.IsPublicEditable ?? false)
                        <br />
                    }
                    @if (Model.CanUserEditBurndown)
                    {
                        <button id="SubmitButton" value="Save Changes">Save</button>
                        <br/>
                    }
                    <a href="@Model.AbsoluteUrl">
                        Permalink
                    </a>
                </div>
            </div>
        </div>
        @Html.HiddenFor(m=>m.BurndownId, new {id="HiddenBurndownId"})
        @Html.HiddenFor(m => m.Definition,new { id="HiddenDefinition"})
    }
</div>

@section scripts {
    <script src="/Scripts/ace/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
    <script>

        var editor = ace.edit("editor");

        function doSave() {
            var contents = editor.getValue();
            $("#HiddenDefinition").val(contents);
            $(".MyFormClass").submit();
        }

        editor.setTheme("ace/theme/tomorrow");
        editor.getSession().setMode("ace/mode/yaml");
        editor.getSession().setTabSize(4);
        editor.getSession().setUseSoftTabs(true);
        @if (!Model.CanUserEditBurndown)
        {
            <text>editor.setReadOnly(true);</text>
        }
        editor.setShowPrintMargin(false);

        // TODO: switch this out for a real ajax type of call when we have more time.  And maybe a spinner
        @if (Model.CanUserEditBurndown)
        {
            <text>
            var submitButton = $("#SubmitButton");
            submitButton.click(doSave);
            $(window).bind('keydown', function (event) {
                if (event.ctrlKey || event.metaKey) {
                    switch (String.fromCharCode(event.which).toLowerCase()) {
                        case 's':
                            event.preventDefault();
                            submitButton.click();
                            break;
                    }
                }
            });
            </text>
        }

        $(document)
            .ready(function () {
                $.ajax({
                    url: '@Url.Action("GetHistory", "Home")'+'/'+$("#HiddenBurndownId").val(),
                    success: function (data) {
                        // your data could be a View or Json or what ever you returned in your action method 
                        // parse your data here
                        alert(data);
                    }
                });
            });
    </script>
}
